--- scripts/deluge.old	2007-07-11 20:28:51.000000000 -0700
+++ scripts/deluge	2007-07-13 16:16:43.000000000 -0700
@@ -39,6 +40,7 @@
 import os, os.path
 import gettext, locale
 import deluge, deluge.common, deluge.interface
+import re
 try:
 	import dbus
 	dbus_version = getattr(dbus, 'version', (0,0,0))
@@ -64,6 +66,36 @@
 
 def start_deluge():
 	print "Starting new Deluge session..."
+	pstate_file_path = os.getenv("HOME") + "/.config/deluge/persistent.state"
+	## The persistent_state object moved from the deluge.deluge module to the
+	## deluge.core module from 0.5; so let's edit the user's saved data to reflect
+	## this.
+	if os.path.isfile(pstate_file_path):
+		try:
+			pstate_fd = open(pstate_file_path, "r")
+			pstate_data = pstate_fd.read()
+			pstate_fd.close()
+			
+			## If the file was empty, then we should remove it so that the
+			## pickler doesn't not attempt to unpack an empty state.
+			if len(pstate_data) is 0:
+				os.remove(pstate_file_path)
+				print "Empty persistent state data file removed successfully."
+			## The file exists and contains data, so let's do a regex-based
+			## find/replace to update the module name.
+			else:
+				pstate_fd_new = open(pstate_file_path, "w")
+				pstate_old_regex = re.compile("""^\(ideluge\.deluge$""", re.MULTILINE)
+				pstate_new_data = re.sub(pstate_old_regex, "(ideluge.core", pstate_data)
+				pstate_fd_new.write(pstate_new_data)
+				pstate_fd_new.close()
+				print "Persistent state data updated successfully."
+		except OSError, oopsie: 
+			print >> sys.stderr, "There was an error updating the persistent.state file.\n"		\
+				"If this is an upgrade from an earlier version of Deluge, this may cause"	\
+				"bugs or failures in startup. You may wish to remove it manually."		\
+				"(%s) Continuing..." % state_file
+			print >> sys.stderr, "The error was: %s." % oopsie
 	interface = deluge.interface.DelugeGTK()
 	add_args(interface)
 	interface.start()
