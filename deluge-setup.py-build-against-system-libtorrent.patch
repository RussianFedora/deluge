--- setup.py.old	2007-03-02 20:14:51.000000000 -0800
+++ setup.py	2007-03-02 20:17:03.000000000 -0800
@@ -29,16 +29,11 @@
 
 
 #
-# NOTE: The following "hack" removes the -g and -Wstrict-prototypes
-# build options from the command that will compile the C++ module,
+# NOTE: The following "hack" removes the -Wstrict-prototypes
+# build option from the command that will compile the C++ module,
 # deluge_core.  While we understand that you aren't generally
-# encouraged to do this, we have done so for the following reasons:
-# 1) The -g compiler option produces debugging information about
-#	the compiled module.  However, this option increases the 
-#	size of deluge_core.so from ~1.9MB to 13.6MB and slows down
-#	the program's execution without offering any benefits 
-#	whatsoever.
-# 2) -Wstrict-prototypes is not a valid C++ build option, and the
+# encouraged to do this, we have done so for the following reason(s):
+# 1) -Wstrict-prototypes is not a valid C++ build option, and the
 #	compiler will throw a number of warnings at compile time.
 #	While this does not really impact anything, it makes it
 #	seem as if something is going wrong with the compile, and
@@ -60,60 +55,11 @@
 
 
 
-#
-# NOTE: The Rasterbar Libtorrent source code is in the libtorrent/ directory
-# inside of Deluge's source tarball.  On several occasions, it has been 
-# pointed out to us that we should build against the system's installed 
-# libtorrent rather than our internal copy, and a few people even submitted
-# patches to do just that. However, as of now, this version
-# of libtorrent is not available in Debian, and as a result, Ubuntu. Once
-# libtorrent-rasterbar is available in the repositories of these distributions,
-# we will probably begin to build against a system libtorrent, but at the
-# moment, we are including the source code to make packaging on Debian and
-# Ubuntu possible.
-#
 deluge_core = Extension('deluge_core',
-                    include_dirs = ['./libtorrent', './libtorrent/include', 
-                    			'./libtorrent/include/libtorrent', 
-                    			'/usr/include/python' + pythonVersion],
-                    libraries = ['boost_filesystem', 'boost_date_time',
-					'boost_program_options', 'boost_regex',
-					'boost_serialization', 'boost_thread', 
-					'z', 'pthread'],
-                    extra_compile_args = ["-Wno-missing-braces"],
-                    sources = ['src/deluge_core.cpp',
-					'libtorrent/src/alert.cpp',
-					'libtorrent/src/allocate_resources.cpp',
-					'libtorrent/src/bt_peer_connection.cpp',
-					'libtorrent/src/entry.cpp',
-					'libtorrent/src/escape_string.cpp',
-					'libtorrent/src/file.cpp',
-					'libtorrent/src/http_tracker_connection.cpp',
-					'libtorrent/src/identify_client.cpp',
-					'libtorrent/src/ip_filter.cpp',
-					'libtorrent/src/peer_connection.cpp',
-					'libtorrent/src/piece_picker.cpp',     
-					'libtorrent/src/policy.cpp',       
-					'libtorrent/src/session.cpp',   
-					'libtorrent/src/session_impl.cpp',
-					'libtorrent/src/sha1.cpp',
-					'libtorrent/src/stat.cpp',
-					'libtorrent/src/storage.cpp',
-					'libtorrent/src/torrent.cpp',
-					'libtorrent/src/torrent_handle.cpp',
-					'libtorrent/src/torrent_info.cpp',
-					'libtorrent/src/tracker_manager.cpp',
-					'libtorrent/src/udp_tracker_connection.cpp',
-					'libtorrent/src/web_peer_connection.cpp',
-						'libtorrent/src/kademlia/closest_nodes.cpp',
-						'libtorrent/src/kademlia/dht_tracker.cpp',
-						'libtorrent/src/kademlia/find_data.cpp',
-						'libtorrent/src/kademlia/node.cpp',
-						'libtorrent/src/kademlia/node_id.cpp',
-						'libtorrent/src/kademlia/refresh.cpp',
-						'libtorrent/src/kademlia/routing_table.cpp',
-						'libtorrent/src/kademlia/rpc_manager.cpp',
-						'libtorrent/src/kademlia/traversal_algorithm.cpp'])
+	include_dirs = [sysconfig.get_python_inc(), '/usr/include', '/usr/include/libtorrent'],
+	libraries = ['boost_filesystem', 'torrent'],
+	extra_compile_args = ["-Wno-missing-braces"],
+	sources = ['src/deluge_core.cpp'])
 
 data = [('share/deluge/glade',  glob.glob('glade/*.glade')),
         ('share/deluge/pixmaps', glob.glob('pixmaps/*.png')),
